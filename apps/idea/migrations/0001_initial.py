# Generated by Django 2.2.10 on 2021-10-04 10:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('description', models.TextField(max_length=5000, verbose_name='Descripción')),
                ('title', models.CharField(max_length=150, verbose_name='Título')),
                ('is_active', models.BooleanField(default=True, verbose_name='¿Está activa?')),
                ('priority', models.CharField(blank=True, choices=[('ALTA', 'Alta'), ('MEDIA', 'Media'), ('BAJA', 'Baja')], max_length=20, null=True, verbose_name='Prioridad')),
                ('innovation_type', models.CharField(blank=True, choices=[('INCREMENTAL', 'Incremental'), ('PROCESOS', 'Procesos'), ('PRODUCTO', 'Producto')], max_length=20, null=True, verbose_name='Tipo de Innovación')),
                ('is_merge', models.BooleanField(blank=True, default=False, null=True, verbose_name='¿Es merge?')),
                ('is_fastrack', models.BooleanField(blank=True, default=False, null=True, verbose_name='¿Es fastrack?')),
                ('feedback', models.CharField(blank=True, max_length=500, null=True, verbose_name='Feedback')),
                ('score_idea', models.IntegerField(blank=True, null=True, verbose_name='Leguas por Idea')),
                ('current_phase', models.IntegerField(blank=True, null=True, verbose_name='Fase Actual')),
                ('conditions', models.BooleanField(default=True, verbose_name='Términos y condiciones')),
                ('gain', models.FloatField(blank=True, default=0, null=True, verbose_name='Beneficio')),
                ('investment', models.FloatField(blank=True, default=0, null=True, verbose_name='Inversión')),
                ('roi', models.FloatField(blank=True, default=0, null=True, verbose_name='ROI')),
                ('link_documentation', models.URLField(blank=True, default='https://drive.google.com/', max_length=1500, null=True, verbose_name='Enlace a Documentación')),
                ('collaborator', models.ManyToManyField(blank=True, related_name='collaborator', to=settings.AUTH_USER_MODEL, verbose_name='Colaboradores')),
                ('id_merge', models.ManyToManyField(blank=True, related_name='_idea_id_merge_+', to='idea.Idea')),
            ],
            options={
                'verbose_name': 'Idea',
                'verbose_name_plural': 'Ideas',
                'permissions': (('view_dashboard', 'view_dashboard'), ('view_bank', 'view_bank')),
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=300, verbose_name='Descripción')),
                ('year', models.IntegerField(verbose_name='Año')),
            ],
            options={
                'verbose_name': 'Objetivo',
                'verbose_name_plural': 'Objetivos',
            },
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre Fase')),
            ],
            options={
                'verbose_name': 'Fase',
                'verbose_name_plural': 'Fases',
            },
        ),
        migrations.CreateModel(
            name='QuestionPhase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Pregunta')),
                ('date', models.DateField(auto_now_add=True, null=True, verbose_name='Fecha')),
            ],
            options={
                'verbose_name': 'Pregunta Pain',
                'verbose_name_plural': 'Preguntas Pain',
            },
        ),
        migrations.CreateModel(
            name='Phase_Date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase_date', models.DateField(auto_now_add=True, null=True, verbose_name='Fecha Fase inicial')),
                ('phase_date_previous', models.DateField(blank=True, null=True, verbose_name='Fecha fase previa final')),
                ('document', models.FileField(blank=True, null=True, upload_to='documents_idea', verbose_name='Documento Fase')),
                ('is_active', models.BooleanField(default=False, verbose_name='¿Está finalizada la fase?')),
                ('days_total', models.IntegerField(blank=True, null=True, verbose_name='Días en la fase')),
                ('id_idea', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phase_question', to='idea.Idea')),
                ('id_phase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phase_question', to='idea.Phase')),
            ],
            options={
                'verbose_name': 'Fecha Fase',
                'verbose_name_plural': ' Fechas Fases',
            },
        ),
        migrations.CreateModel(
            name='IdeaQuestionPhase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_date', models.DateField(auto_now_add=True, null=True, verbose_name='Fecha preguntas')),
                ('is_state_question', models.BooleanField(default=True)),
                ('id_idea', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='idea.Idea')),
                ('id_question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='idea.QuestionPhase')),
            ],
            options={
                'verbose_name': 'Pregunta Pain Idea',
                'verbose_name_plural': 'Preguntas Pain Ideas',
            },
        ),
        migrations.AddField(
            model_name='idea',
            name='id_objective',
            field=models.ManyToManyField(to='idea.Objective', verbose_name='Objetivo'),
        ),
        migrations.AddField(
            model_name='idea',
            name='id_phase',
            field=models.ManyToManyField(default=1, through='idea.Phase_Date', to='idea.Phase'),
        ),
        migrations.AddField(
            model_name='idea',
            name='id_question',
            field=models.ManyToManyField(through='idea.IdeaQuestionPhase', to='idea.QuestionPhase'),
        ),
        migrations.AddField(
            model_name='idea',
            name='owner_idea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_idea', to=settings.AUTH_USER_MODEL, verbose_name='Propietario Idea'),
        ),
        migrations.CreateModel(
            name='HistoricalQuestionPhase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Pregunta')),
                ('date', models.DateField(blank=True, editable=False, null=True, verbose_name='Fecha')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Pregunta Pain',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPhase_Date',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('phase_date', models.DateField(blank=True, editable=False, null=True, verbose_name='Fecha Fase inicial')),
                ('phase_date_previous', models.DateField(blank=True, null=True, verbose_name='Fecha fase previa final')),
                ('document', models.TextField(blank=True, max_length=100, null=True, verbose_name='Documento Fase')),
                ('is_active', models.BooleanField(default=False, verbose_name='¿Está finalizada la fase?')),
                ('days_total', models.IntegerField(blank=True, null=True, verbose_name='Días en la fase')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('id_idea', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='idea.Idea')),
                ('id_phase', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='idea.Phase')),
            ],
            options={
                'verbose_name': 'historical Fecha Fase',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPhase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre Fase')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Fase',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalObjective',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.CharField(max_length=300, verbose_name='Descripción')),
                ('year', models.IntegerField(verbose_name='Año')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Objetivo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdeaQuestionPhase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('question_date', models.DateField(blank=True, editable=False, null=True, verbose_name='Fecha preguntas')),
                ('is_state_question', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('id_idea', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='idea.Idea')),
                ('id_question', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='idea.QuestionPhase')),
            ],
            options={
                'verbose_name': 'historical Pregunta Pain Idea',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdea',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('creation_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('description', models.TextField(max_length=5000, verbose_name='Descripción')),
                ('title', models.CharField(max_length=150, verbose_name='Título')),
                ('is_active', models.BooleanField(default=True, verbose_name='¿Está activa?')),
                ('priority', models.CharField(blank=True, choices=[('ALTA', 'Alta'), ('MEDIA', 'Media'), ('BAJA', 'Baja')], max_length=20, null=True, verbose_name='Prioridad')),
                ('innovation_type', models.CharField(blank=True, choices=[('INCREMENTAL', 'Incremental'), ('PROCESOS', 'Procesos'), ('PRODUCTO', 'Producto')], max_length=20, null=True, verbose_name='Tipo de Innovación')),
                ('is_merge', models.BooleanField(blank=True, default=False, null=True, verbose_name='¿Es merge?')),
                ('is_fastrack', models.BooleanField(blank=True, default=False, null=True, verbose_name='¿Es fastrack?')),
                ('feedback', models.CharField(blank=True, max_length=500, null=True, verbose_name='Feedback')),
                ('score_idea', models.IntegerField(blank=True, null=True, verbose_name='Leguas por Idea')),
                ('current_phase', models.IntegerField(blank=True, null=True, verbose_name='Fase Actual')),
                ('conditions', models.BooleanField(default=True, verbose_name='Términos y condiciones')),
                ('gain', models.FloatField(blank=True, default=0, null=True, verbose_name='Beneficio')),
                ('investment', models.FloatField(blank=True, default=0, null=True, verbose_name='Inversión')),
                ('roi', models.FloatField(blank=True, default=0, null=True, verbose_name='ROI')),
                ('link_documentation', models.URLField(blank=True, default='https://drive.google.com/', max_length=1500, null=True, verbose_name='Enlace a Documentación')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner_idea', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Propietario Idea')),
            ],
            options={
                'verbose_name': 'historical Idea',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
